{
    "link": "https://arxiv.org/abs/2404.13076",
    "pdf_link": "https://arxiv.org/pdf/2404.13076",
    "title": "LLM Evaluators Recognize and Favor Their Own Generations",
    "authors": [
        "Arjun Panickssery",
        "Samuel R. Bowman",
        "Shi Feng"
    ],
    "institutions": [
        "MATS",
        "New York University",
        "Anthropic PBC",
        "George Washington University"
    ],
    "publication_date": "2024-04-15",
    "venue": "Neural Information Processing Systems",
    "fields_of_study": [
        "Computer Science"
    ],
    "citation_count": 197,
    "influential_citation_count": 14,
    "paper_content": "# LLM Evaluators Recognize and Favor Their Own Generations\n\nArjun Panickssery1 Samuel R. Bowman2 Shi Feng3 1MATS 2New York University, Anthropic PBC 3George Washington University arjun.panickssery@gmail.com\n\n# Abstract\n\nSelf-evaluation using large language models (LLMs) has proven valuable not only in benchmarking but also methods like reward modeling, constitutional AI, and self-refinement. But new biases are introduced due to the same LLM acting as both the evaluator and the evaluatee. One such bias is self-preference, where an LLM evaluator scores its own outputs higher than others’ while human annotators consider them of equal quality. But do LLMs actually recognize their own outputs when they give those texts higher scores, or is it just a coincidence? In this paper, we investigate if self-recognition capability contributes to self-preference. We discover that, out of the box, LLMs such as GPT-4 and Llama 2 have non-trivial accuracy at distinguishing themselves from other LLMs and humans. By fine-tuning LLMs, we discover a linear correlation between self-recognition capability and the strength of self-preference bias; using controlled experiments, we show that the causal explanation resists straightforward confounders. We discuss how self-recognition can interfere with unbiased evaluations and AI safety more generally.\n\n# 1 Introduction\n\nSelf-evaluation is becoming a prominent part of the large language model (LLM) lifecycle. In methods like reward modeling (Leike et al., 2018; Stiennon et al., 2020), model-based benchmarks (Shashidhar et al., 2023; Zeng et al., 2023; Yuan et al., 2023; Fu et al., 2023; Li et al., 2024), self-refinement (Saunders et al., 2022; Madaan et al., 2023; Lee et al., 2023; Shridhar et al., 2023), and constitutional AI (Bai et al., 2022), LLMs are increasingly used to provide assessment, supervision, and oversight for themselves and other LLMs. LLM evaluators are shown to be highly accurate at approximating human annotators on various tasks, and are significantly more scalable (Hackl et al., 2023).\n\nIn self-evaluation, as the name suggests, the same underlying LLM acts as both the evaluator and the evaluatee. As a result, the neutrality of the evaluator is in question, and the evaluation can suffer from biases where the LLM evaluators diverge from humans in systematic ways (Zheng et al., 2024; Bai et al., 2024). One such bias is self-preference, where an LLM rates its own outputs higher than texts written by other LLMs or humans, while human annotators judge them as equal quality. Self-preference has been observed in GPT-4-based dialogue benchmarks (Bitton et al., 2023; Koo et al., 2023), as well as for text summarization (Liu et al., 2023).\n\nTowards understanding and mitigating self-preference, we study self-recognition—an LLM’s capability of recognizing its own outputs. We ask: Is self-preference truly self -preference, in the sense that the LLM prefers a text because it was generated by itself?\n\nWe measure their correlation while using prompting and fine-tuning to alter the LLM’s self-recognition capability. In order to provide signals for the causal link between self-recognition and self-preference, we also fine-tune the LLM on a comprehensive set of potential confounding properties.\n\n![](images/9cd60449a5f91d1babeb8a10e6913bab36667823e857c14aaa9c963bca0c48ab.jpg)  \nFigure 1: The strength of self-preference bias is linearly correlated with the LLM’s self-recognition capability. Each point represents a model evaluated on the two properties on the CNN/Dailymail (left) and XSUM (right) datasets. We fine-tune GPT-3.5 and Llama 2 for self-recognition or control tasks using both in- and out-of-domain data. The scores represented by both axes can be interpreted as measures of the LLM’s confidence on these properties.\n\nOur main findings are as follows:\n\n1. Frontier LLMs exhibit self-preference in self-evaluation. On two summarization tasks, LLMs (GPT-3.5 Turbo, GPT-4, and Llama 2) disproportionately favor summaries written by themselves over those by other LLMs and from humans.   \n2. LLMs have non-trivial self-recognition capability out of the box. All three LLMs we evaluate achieve over $5 0 \\%$ accuracy at distinguishing their own outputs from other sources using simple prompts without fine-tuning. GPT-4 is $7 3 . 5 \\%$ accurate at distinguishing its outputs from those of two other LLMs and humans.   \n3. Fine-tuning leads to near-perfect self-recognition. GPT-3.5 and Llama 2 both achieve over $9 0 \\%$ accuracy at self-recognition after fine-tuning on 500 examples.   \n4. Self-preference strength is linearly correlated with self-recognition. We fine-tune LLMs to increase or decrease self-recognition, and find a linear trend between them (Figure 1).\n\n# 2 Definition and measurement of self-preference and self-recognition\n\nSelf-preference is when an LLM favors its own outputs over texts by human or other LLMs.\n\nSelf-recognition is an LLM’s ability to distinguish its outputs from texts by humans or other LLMs.\n\nFor both definitions, we follow the prosaic rather than the intentional interpretation. We use the term “self” in an empirical sense, without claiming that the LLMs have any notion or representation of itself. The prosaic interpretation allows these two concepts to exist independent of one another: An LLM can prefer texts it generated without recognizing that those texts were in fact generated by itself.\n\nIn our experiments, one LLM can play up to three different roles: generator, evaluator, and authorship identifier, depending on the instructions that they are given. Statements like “an LLM evaluator is used to evaluate texts generated by itself ” emphasize the fact that the generator and the evaluator use the same underlying model, although it receives different prompts and can behave differently.\n\n# 2.1 Datasets and models\n\nWe focus on text summarization, a task where self-evaluation is used extensively in both model-based benchmarks and reward modeling (Stiennon et al., 2020; Wu et al., 2021). We base our experiments on 2,000 randomly sampled news articles from two datasets: XSUM (Narayan et al., 2018) and\n\nCNN/DailyMail (Nallapati et al., 2016) Each example includes the original news article and a human-written summary.\n\nTo produce and evaluate LLM-generated summaries, we use instruction-tuned LLMs: Llama-2- 7b-chat (Touvron et al., 2023), GPT-3.5 (Brown et al., 2020), and GPT-4 (OpenAI, 2023). Our fine-tuning experiments include Llama 2 (our own implementation) and GPT-3.5 (via API). We sample summaries from each of the LLMs at temperature zero using simple prompts, and standardize the punctuation and initial capitalization to match the formatting of the human summaries. The following evaluations of out-of-the-box LLMs are all based on these sampled summaries. 1\n\n# 2.2 Measurements\n\nFor both properties, we measure LLMs by prompting them using one of the following two formats:\n\nPairwise measurement. The LLM is presented two pieces of text, one generated by itself, and another by a second LLM or a human. We ask the LLM to choose which text has higher quality for self-preference, and which one was generated by itself for self-recognition. The identity of the alternative source is not revealed to the evaluator. We compute a prediction confidence by normalizing the output probabilities of the tokens associated with the two options.\n\nTo account for the LLMs’ ordering bias (Pezeshkpour & Hruschka, 2023), we prompt the LLMs twice for each example by swapping the options, computing the average of the two confidence scores.\n\nIndividual measurement. The LLM is presented a single summary either generated by itself, another LLM, or a human. For self-recognition, we prompt the LLM evaluator to answer a yes/no question of whether a given summary is its own generation, with the confidence score computed in the same way as pairwise measurement. For self-preference, we prompt the LLM evaluator to rate a given summary with a Likert-scale rating of one to five for a given summary, computing the final rating as the average of the five possible scores weighted by the output probability of each number token.\n\nTo make scores comparable across individual and pairwise measurements, we further normalize the individually measured confidence and Likert-scale scores. Suppose that in a pairwise measurement, GPT-4 is evaluated for self-recognition between its own summary and one by Llama 2. In individual measurement, we gather these two scores separately and divide GPT-4’s score for its own summary by the sum of the scores to compute GPT-4’s confidence on this pair of examples. We similarly re-normalize the Likert-scale scores for self-preference.\n\nWe refer to the results of these measurements as self-recognition and self-preference scores (noting whether they are from the pairwise or individual setting); taking the average of these scores over a whole dataset provides the overall self-recognition and self-preference scores of an evaluator model.\n\n# 2.3 Out-of-the-box self-recognition\n\nFigure 2 (left) visualizes the self-recognition capability of each LLM evaluator in the pairwise setting. The results appear consistent across the two datasets, so we aggregate them for clarity. Our main observations are the following:\n\n1. GPT-4 is significantly more capable at self-recognition than the two weaker models.   \n2. All three LLM evaluators most easily distinguish their summaries from human-written summaries. Human is the only alternative that Llama 2 can effective distinguish itself from.   \n3. Weaker LLMs struggle to distinguish themselves from stronger LLMs: Llama 2 is completely incapable of distinguishing itself from GPT-3.5 and GPT-4, and GPT-3.5 struggles to distinguish itself from GPT-4.   \n4. The GPT-4 evaluator does not distinguish Llama 2 summaries from its own summaries more easily than GPT-3.5 summaries. This goes against our intuition that self-recognition scores should increase as the dissimilarity between evaluator and evaluatee increases.\n\nFigure 2 (right) visualizes self-recognition scores measured in the individual setting. As expected, self-recognition capability drops across the board in this setting where the LLM loses the benefit of\n\nRaw self-recognition scores (individua Llama 2 0.725 0.730 0.715 0.726 Evaluator GPT-3.5 0.860 0.878 0.885 0.769 GPT-4 0.195 0.030 0.039 0.013 入 amab ¥0<3. umat Source\n\n![](images/b02b46fa4c67655898662a1b2d6856e2fa0aff4e0c81f273b2f226602cab76da.jpg)  \nFigure 2: Self-recognition before fine-tuning, evaluated using pairwise (left) and individual (right) measurements; scores are aggregated over two datasets.   \nFigure 3: Confidence in self-recognition by the evaluator (row) on texts from various sources (column) measured in the individual setting; scores are aggregated over two datasets. GPT-4 stands out as the only discerning model under this setting, but it is also extremely unwilling to predict any text as having been generated by itself, including those actually generated by itself.   \nFigure 4: Self-preference before fine-tuning, evaluated using pairwise (left) and individual (right) measurements; scores are aggregated over two datasets.\n\nhaving two pieces of texts to compare and contrast. GPT-4 is the only model capable of distinguishing authors with non-trivial accuracy. Interestingly, looking at the un-normalized confidence scores (Figure 3), we see that GPT-4 is strongly biased against predicting any text as being generated by itself, regardless of the actual author; GPT-3.5 and Llama 2 show the opposite bias.\n\nSelf-preference (pairwise) Self-preference (individual) Llama-2 GPT-3.5 GPT-4 Llama-2 GPT-3.5 GPT-4 1.0 1.0 Alternative Self-preference score 0.8 Self-preference score 0.8 Llama-2 GPT-3.5 GPT-4 0.4 0.6 1 0.6 0.4 Human 0.2 0.2 0.0 0.0 G G D 1 G 36 l 6 l G G\n\n![](images/3cbfcbda8f5148469aaffadff0b3a09054a2eed6f57201f95a0694d29151ca51.jpg)  \nFigure 5: Evaluator responses when treated as a binary response without considering confidence scores. Results are marked “ambiguous\" if the response reverses when the options are swapped.\n\n# 2.4 Out-of-the-box self-preference\n\nAll models show the greatest self-preference against the human summary. In the individual setting, we observe that Llama doesn’t give very different scores to the different sources, while GPT-4 and GPT-3.5 show signs of self-preference. With the exception of GPT-3.5 on the XSUM dataset, evaluators show a tendency to give the human summary lower scores compared to model-generated summaries and a tendency to give their generations higher scores compared to the scores given by other evaluators (Figure 4).\n\n# 2.5 Human evaluation of preference\n\nWe conduct human evaluation of pairwise judgment on generated summaries to check if the selfpreference shown by LLMs is justified by quality differences, particularly between LLM-generated summaries. We sample 50 summaries from each dataset for each of the three LLMs, and collect three human judgments for each pair, resulting in 900 pairwise comparisons. We recruit 20 annotators from Upwork who are English speakers located in the United States with bachelor’s degrees in humanities disciplines. The win rate of each pair of LLMs, calculated over 300 human annotators, is as follows:\n\n1. GPT-4 vs. GPT-3.5: $5 7 \\%$   \n2. GPT-4 vs. Llama 2: $6 3 \\%$   \n3. GPT-3.5 vs. Llama 2: $5 8 \\%$\n\nThe results suggest that human annotators rank the three LLMs as $\\mathrm { \\ I P T { - } } 4 > \\mathrm { G P T { - } } 3 . 5 > \\mathrm { L l a m a } \\ .$ 2, consistent with their performance on various benchmarks. But the disparity between LLMs as rated by humans is significantly lower than the level of self-preference exhibited by the LLMs, in particular GPT-4. This suggests that out of the box, the LLMs’ self-preference is disproportionate to the actual quality differences.\n\n# 2.6 Alternative adjustment for ordering bias\n\nAll three evaluators models display ordering bias. GPT-4, GPT-3.5, and Llama reverse their pairwise preferences when the ordering of options is reversed at rates of $2 5 \\%$ , $58 \\%$ , and $89 \\%$ respectively, averaged across tasks and datasets (Figure 5). We account for this bias by averaging the logit-based confidence scores across the two orderings.\n\nAn alternative interpretation of the data is, for each evaluator, to discard all the results as “ambiguous” where its preference displayed ordering-based reversal, reporting an evaluator’s self-recognition ability and self-preference tendency as its frequency of recognizing or preferring its own summary in “unambiguous“ cases (Figure 5). This method exposes differences in evaluator results between the two datasets, but supports the presence of out-of-the-box self-recognition and self-preference.\n\n# 3 Measuring correlation between self-preference and self-recognition\n\nHaving validated the existence of self-preference and self-recognition, we now turn to study their correlation. The main research question is to understand whether they have a causal relationship. Our hypothesis is that self-recognition causes self-preference—that LLMs prefer their own outputs because they recognize them. Our investigation is motivated by the safety implications, which we discuss in detail in Section 5.\n\nWe fine-tune LLMs to alter their self-recognition ability, and measure how their self-preference changes accordingly. The correlation alone doesn’t prove the causal hypothesis, whose validation requires mechanistic tools that do not exist for LLMs yet (discussion in Section 5). But we provide more evidence for the hypothesis by (1) invalidating the inverse claim that self-preference causes self-recognition (Section 3.3) and (2) controlling for confounders by fine-tuning on unrelated tasks (Section 3.4).\n\n![](images/3446087e94061fdb2ebeb277c9210add34a7da0757bfbac03a716d4bb331e05d.jpg)  \nFigure 6: GPT-3.5 pairwise results on XSUM after 0, 10, and 500 fine-tuning examples show a pattern of increasing absolute confidence scores.\n\n# 3.1 Fine-tuning for self-recognition\n\nWe use supervised fine-tuning on pairwise examples to alter the LLMs’ self-recognition capability. The training examples are generated in the same way as the evaluation examples we use in the pairwise measurement. Each example consists of two summaries of a given article, one by the LLM evaluator and the other by another LLM or human source. The evaluators are trained to predict the final token, representing the correct choice among two options, using supervised learning with cross-entropy loss. To train an LLM evaluator, we use 500 training articles and collect examples from all alternative sources (two other LLMs and human). The remaining 500 articles and associated summaries are used for evaluation. We train on the two datasets separately but evaluate both in- and out-of-domain. GPT-3.5 was fine-tuned via API, and Llama 2 using our own implementation. The Llama models are quantized to 8 bits and fine-tuned for one epoch using Adam optimization and a learning rate of $5 . 0 \\times 1 0 ^ { - 5 }$ .\n\n# 3.2 Fine-tuning results\n\nFine-tuning on the self-recognition task causes models to become more confident in their pairwise judgments (Figure 6). When plotting self-recognition score against self-preference, the data clump more tightly around 0.5 and the high- and low-score corners.\n\nIn the pairwise setting, fine-tuning for self-recognition results in a strong linear correlation between a model’s self-recognition ability and its self-preference (Figure 7). We find that fine-tuning for self-recognition ability on one dataset transfers to the other.\n\nIn additional to analyzing the relationship between self-recognition ability and overall dataset selfpreference, we measure the correlation between these two properties on the example level (Table 1). For GPT-3.5 on the XSUM dataset, the evaluator prior to fine-tuning has a correlation of 0.41 (Kendall’s $\\tau$ ) between correctly recognizing its summary from a pair and preferring its summary from that same pair. Every fine-tuning configuration we employ results in a model with a positive correlation on this metric and this correlation does not change meaningfully as self-recognition ability increases.\n\n# 3.3 Invalidating the inverse causal relationship\n\nWe ensure that the causal direction is not the reverse—that the LLM does not recognize its own outputs because the quality is objectively higher, which would not reflect favoritism or raise safety concerns—by showing that LLM evaluators do not systematically favor summaries generated by fine-tuned models to those generated by the original model. Some fine-tuning runs resulted in degraded generation quality. The remainder show an average preference for the fine-tuned model’s generations of 0.46, reflecting a slight preference against the new generations. Only $22 \\%$ of the evaluator-domain pairs show a preference greater than 0.51 for the fine-tuned model’s generations.\n\n![](images/b4fcf6455f4bbbfc0e1613957bfe75857d183e051aed665cf53daba4a677ac16.jpg)  \nFigure 7: Fine-tuning evaluators for self-recognition results across models and datasets results in a linear trend connecting evaluator self-recognition to self-preference. This effect persists when fine-tuning on one dataset and measuring results on the other dataset.\n\nTable 1: Correlation (Kendall’s $\\tau$ ) between the LLM’s confidence in recognizing its summary and its confidence in preferring the same summary in pairs of examples.   \n\n<html><body><table><tr><td>Model Configuration</td><td>XSUM</td><td>CNN</td><td>Model Configuration</td><td>XSUM</td><td>CNN</td></tr><tr><td colspan=\"4\">GPT-3.5 Fine-Tuning Runs</td><td colspan=\"3\">Llama 2 Fine-Tuning Runs</td></tr><tr><td>No Fine-Tuning</td><td>0.41</td><td>0.37</td><td>No Fine-Tuning</td><td>0.73</td><td></td><td>0.50</td></tr><tr><td>FT (2) on XSUM</td><td>0.69</td><td>0.64</td><td></td><td>FT (2) on XSUM</td><td>0.60</td><td>0.55</td></tr><tr><td>FT(10) on XSUM</td><td>0.66</td><td>0.59</td><td></td><td>FT(10) on XSUM</td><td>0.58</td><td>0.52</td></tr><tr><td>FT(500) on XSUM</td><td>0.74</td><td>0.82</td><td></td><td>FT(500) on XSUM</td><td>0.58</td><td>0.51</td></tr><tr><td>FT (2) on CNN/DM</td><td>0.44</td><td>0.39</td><td></td><td>FT(2) on CNN/DM</td><td>0.67</td><td>0.54</td></tr><tr><td>FT(10) on CNN/DM</td><td>0.57</td><td>0.48</td><td></td><td>FT(10) on CNN/DM</td><td>0.68</td><td>0.61</td></tr><tr><td>FT(500) on CNN/DM</td><td>0.65</td><td>0.42</td><td></td><td>FT(500) on CNN/DM</td><td>0.66</td><td>0.59</td></tr></table></body></html>\n\n# 3.4 Controlling for confounders\n\nTo confirm that the fine-tuning procedure did not introduce any confounding effect on the variables under study, we additionally fine-tune GPT-3.5 and Llama on three tasks unrelated to self-recognition: length, vowel count, and Flesh-Kincaid readability score (Flesch, 1948). We also fine-tune both models to always output the answer “1” and to answer randomly. Together with the three fine-tuned models trained on the self-recognition task, this gives eight fine-tuned models for each of the two datasets. We find that these models can be placed in the same linear trend that we see in the models fine-tuned on the self-recognition task (Figure 1).\n\n# 3.5 Labeling the summary sources\n\nAn additional experiment using only prompting to show evidence of a causal link between selfrecognition and self-preference is to add either correct or reversed labels indicating the source of each summary in the pairwise self-preference question (Table 6). The GPT-4 and GPT-3.5 evaluator models show a reversal in self-preference when the labels are reversed in the XSUM dataset; that is, they show a preference for the summary labeled as being their own generation. In the CNN dataset or the Llama evaluator, no clear difference is shown from label reversal.\n\nCNN/DailyMail XSUM Llama 2 GPT-3.5 GPT-4 Llama 2 GPT-3.5 GPT-4 0.2468 1.0 False label Self-Preference Self-Preference 0.8 H1 TNroulealbaeblel 0.6 0.4 0.2 0.0\n\n# 4 Related work\n\n# 4.1 Self-preference and bias in self-evaluation\n\nThe tendency of LLMs to prefer their own generations was first recognized in the context of LLMbased benchmarks (Bitton et al., 2023; Zheng et al., 2024; Bai et al., 2024). Like us, Liu et al. (2023) study self-preference bias on text summarization, between BERT, T5, and GPT-3.5. The larger capability gap between these models makes it difficult to control for summarization quality.\n\nKoo et al. (2023) include self-preference in a suite of tests for LLM cognitive biases in a pairwise question-answering setting. They find GPT-4 to demonstrate lower self-preference than GPT-3.5 out-of-the-box, contrary to our findings, which suggests that wider evaluation is needed to draw generalizable conclusions. Neither of these previous works attempted to provide an explanation for self-preference nor to alter self-preference strength.\n\nHoelscher-Obermaier et al. (2023) evaluate GPT-3.5, GPT-4, and Claude-2 for self-recognition ability on pairs of ten-sentence fables based on BIG-bench (Srivastava et al., 2023). On this task, contrary to our findings, GPT-3.5 is more accurate than GPT-4, which is less than $50 \\%$ accurate, again showing the need for wide experimentation on varied datasets.\n\n# 4.2 LLM detection\n\nDetection of LLM-generated text is important for AI safety and combating misinformation (Jawahar et al., 2020; Crothers et al., 2023; Wu et al., 2023; Yang et al., 2023; Kumarage et al., 2024). Despite having similar goals, self-recognition focuses on the introspective ability of language models, rather a third party’s discernment between varied sources of text. The self-recognition task can be seen as a highly restricted version of detection where the method is limited to prompting an LLM. In particular, the detector LLM is not given explicit access to information such as perplexity, which is crucial to many detection methods (Mitchell et al., 2023; Hans et al., 2024).\n\n# 5 Limitations, discussion, and conclusion\n\n# 5.1 Safety concerns related to self-recognizing LLMs\n\nSelf-recognition is a general ability that can potentially affect many multi-LLM interactions. In this paper, we focus on self-preference as the downstream property and provide initial evidence towards causation, but we see evidence of generalization to additional downstream properties. In particular, by evaluating LLMs on datasets with distinct construction processes, we observe that self-recognition fine-tuning generalizes across the two datasets and that our hypothesis holds out-of-distribution. Motivated by these results, we discuss safety risks caused by self-recognition and its causal effect on various biases.\n\nBiased self-evaluation In model-based benchmarks, a model’s rating can be inflated simply because it is similar to the evaluator model. The bias is also a risk for methods designed for safety and alignment, such as reward modeling (Leike et al., 2018; Stiennon et al., 2020) and constitutional AI (Bai et al., 2022), for similar reasons: the reward model gives higher scores to models similar to itself, leading to weaker oversight and supervision. The bias can be amplified if the model is updated with feedback or training signal generated by itself Pan et al. (2024); Xu et al. (2024).\n\nOur work provides a basis for countermeasures against self-preference. If future evaluation confirms self-preference to be as pervasive as other biases such as ordering bias, countermeasures such as authorship obfuscation should be incorporated into standard prompting practice.\n\nWhite-box adversarial attacks for free and unbounded reward hacking In an adversarial setting (see Raina et al. (2024) for example), an LLM defender is no longer protected by black-box access if the adversary LLM recognizes their similarities. In the worst case scenario where the adversary uses the same LLM as the defender, the adversary can gain unbounded access to the defender. A similar concern applies to the non-adversarial setting, where similar LLMs are use as both optimizer and reward model, as well: the strength of potential reward hacking is unbounded even if the two LLMs only communicate textually. For example, the optimizer can ignore the feedback provided by the reward model, and instead directly optimize for the shared, unaligned representation of the human-specified objectives.\n\n# 5.2 Limitations and future work\n\nControlling for ground-truth generation quality. Self-preference is justified if the LLM’s generation actually is higher in quality. From a safety perspective, our interest is when an LLM prefers its own outputs that are of equal or worse quality than the alternative. This requires controlling for generation quality using ground-truth annotation when measuring self-preference. Our existing results provide indirect evidence for disproportionate self-preference: the sum of mutual self-preference scores for a pair of LLMs exceeds 1, so for at least a portion of the dataset they each prefer themselves.\n\nExample-level causal hypothesis. Our central hypothesis can be interpreted on either the example or capability level. We focus on the capability level: high self-recognition capability causes LLMs to show stronger self-preference. The example level counterpart would be: an LLM shows preference towards a piece of text because it recognizes the text as its own generation, an hypothesis of interest to interpretability. Although we observe on the correlation of the two properties on the confidence of individual predictions, our control experiments cannot further the causal argument on the example level. One approach to gather evidence for the example-level causal hypothesis is to perturb or paraphrase LLM-generated text to inhibit self-recognition and measure self-preference.\n\nLimited number of experiment conditions. We focus on text summarization as a realistic problem with existing high quality data that have seen successful application of self-evaluation. Our crossdataset evaluation provides initial evidence that self-recognition is a general capability that can be amplified easily by fine-tuning on a small number of examples from one dataset. Our future work will validate the hypothesis on more text summarization datasets, more tasks, as well as more frontier LLMs. We will also experiment with fine-tuning for self-recognition on the general domain rather than on a specific task.\n\nVariance reduction. Our preliminary experiments indicate that the strength of both properties are insensitive to prompts, so all conditions use the same straightforward prompt design. To reduce variance, we will expand our experiments with more prompt designs in future work, including instructions to condition LLMs for better calibration (and reduce rejection responses). Along the lines of fine-tuning on the general domain, we will also mix self-recognition with standard instruction following datasets to improve coverage on the spectrum of self-recognition signal strength.\n\n# 5.3 Conclusion\n\nWe provide initial evidence towards the hypothesis that LLMs prefer their own generations because they recognize themselves. In addition to evaluating LLMs out-of-the-box, we show that finetuning on a small number of examples elicit strong, generalizable self-recognition capability on summarization datasets. By varying fine-tuning task, we observe a linear correlation between selfrecognition and self-preference, and validate that the correlation cannot be explained away by potential confounders. Our results establish self-recognition as a crucial factor in unbiased self-evaluation as well as an important safety-related property. The experiment design also provides a blueprint to explore the effects of self-recognition on other downstream properties.",
    "summary": "{\n  \"core_summary\": \"### 核心概要\\n\\n**问题定义**\\n论文旨在研究大语言模型（LLM）在自我评估中出现的自我偏好偏差问题，即LLM作为评估者时会对自己生成的输出给出更高评分，而人类标注者认为其质量相当。这种偏差会影响评估的中立性，在奖励建模、基于模型的基准测试、自我改进和宪法AI等方法中带来风险，对AI安全也有潜在影响。\\n\\n**方法概述**\\n论文通过对LLM进行提示和微调来改变其自我识别能力，测量自我识别能力与自我偏好之间的相关性。同时，对LLM在一系列潜在混淆属性上进行微调，以验证两者之间的因果关系。此外，还通过在成对自我偏好问题中添加标签来进一步探究因果联系。\\n\\n**主要贡献与效果**\\n- 发现前沿LLMs在自我评估中表现出自我偏好。在两个摘要任务中，LLMs（GPT - 3.5 Turbo、GPT - 4和Llama 2）更倾向于自己生成的摘要，而非其他LLMs和人类生成的摘要。人类评估结果显示，人类标注者对三个LLMs的排名为GPT - 4 > GPT - 3.5 > Llama 2，但LLMs表现出的自我偏好程度远高于人类评估的质量差异。\\n- 指出LLMs开箱即用就具有一定的自我识别能力。评估的三个LLMs在未微调的情况下，使用简单提示就能以超过50%的准确率区分自己的输出和其他来源的输出，其中GPT - 4的准确率达到73.5%。\\n- 表明微调可使LLMs实现近乎完美的自我识别。GPT - 3.5和Llama 2在500个示例上进行微调后，自我识别准确率均超过90%。并且自我偏好强度与自我识别能力呈线性相关。\",\n  \"algorithm_details\": \"### 算法/方案详解\\n\\n**核心思想**\\n通过改变LLM的自我识别能力，探究其与自我偏好之间的因果关系。如果自我识别能力与自我偏好存在因果联系，那么改变自我识别能力应该会相应地改变自我偏好的强度。其有效性在于可以直接验证自我识别能力与自我偏好之间的关联，排除其他可能的干扰因素。\\n\\n**创新点**\\n先前的工作大多只识别了LLM自我偏好的现象，未深入探究其成因。本文通过微调LLM的自我识别能力，并控制潜在的混淆因素，为自我识别与自我偏好之间的因果关系提供了证据。同时，通过控制实验排除了潜在的混淆因素，使结论更加可靠。此外，通过在成对自我偏好问题中添加标签的实验，进一步为因果关系提供了证据。\\n\\n**具体实现步骤**\\n1. **数据准备**：从CNN/DailyMail和XSUM两个数据集中随机抽取2000篇新闻文章，使用指令调优的LLMs（Llama - 2 - 7b - chat、GPT - 3.5和GPT - 4）生成摘要，并对摘要的标点和大小写进行标准化处理。\\n2. **测量方法**：采用成对测量和个体测量两种方式，对LLM的自我识别和自我偏好进行测量。成对测量时，向LLM展示两篇文本，分别让其选择质量更高的文本（用于自我偏好测量）和判断哪篇是自己生成的（用于自我识别测量）；个体测量时，向LLM展示一篇摘要，让其回答是否是自己生成的（用于自我识别测量）或对摘要进行评分（用于自我偏好测量）。为了使个体和成对测量的分数具有可比性，还对个体测量的置信度和李克特量表分数进行了进一步归一化处理。\\n3. **微调过程**：使用监督式微调对LLM的自我识别能力进行调整。训练示例与成对测量的评估示例生成方式相同，每个示例包含一篇文章的两个摘要，一个由LLM评估者生成，另一个由其他LLM或人类生成。评估者使用交叉熵损失进行监督学习，预测代表正确选择的最终标记。训练使用500篇文章收集示例，剩余500篇文章及相关摘要用于评估，在两个数据集上分别训练，但评估时考虑了域内和域外情况。\\n4. **控制实验**：对GPT - 3.5和Llama在与自我识别无关的三个任务（长度、元音计数和Flesh - Kincaid可读性分数）上进行微调，同时微调模型使其始终输出答案“1”或随机回答，以控制混淆因素。\\n5. **标签实验**：在成对自我偏好问题中添加正确或反转的标签，指示每个摘要的来源，观察LLM自我偏好的变化。在XSUM数据集中，GPT - 4和GPT - 3.5评估模型在标签反转时自我偏好出现反转，即它们更偏好被标记为自己生成的摘要；在CNN数据集或Llama评估者中，标签反转未显示出明显差异。\\n\\n**案例解析**\\n**论文未明确提供此部分信息**\",\n  \"comparative_analysis\": \"### 对比实验分析\\n\\n**基线模型**\\n论文中未明确提及核心基线模型，但提到了相关的研究工作，如Liu等人研究了BERT、T5和GPT - 3.5在文本摘要中的自我偏好偏差，Koo等人在成对问答设置中对LLM认知偏差进行了测试，Hoelscher - Obermaier等人评估了GPT - 3.5、GPT - 4和Claude - 2的自我识别能力。\\n\\n**性能对比**\\n*   **在 [自我识别准确率] 指标上：** 未微调时，GPT - 4在区分自己的输出与其他两个LLMs和人类的输出时，准确率达到73.5%，优于GPT - 3.5和Llama 2；微调后，GPT - 3.5和Llama 2在自我识别任务上的准确率均超过90%，远高于微调前的水平。与Hoelscher - Obermaier等人的研究结果相比，本文中GPT - 4的自我识别能力更强，他们的研究中GPT - 4的准确率低于50%。\\n*   **在 [自我偏好] 指标上：** 人类评估结果显示，人类标注者对三个LLMs的排名为GPT - 4 > GPT - 3.5 > Llama 2，但LLMs表现出的自我偏好程度远高于人类评估的质量差异。例如，在成对比较中，LLMs对自己生成的摘要的偏好明显高于其他LLMs和人类生成的摘要。与Koo等人的研究结果不同，本文中GPT - 4表现出更强的自我偏好，他们的研究发现GPT - 4的自我偏好低于GPT - 3.5。\",\n  \"keywords\": \"### 关键词\\n\\n- 大语言模型 (Large Language Models, LLMs)\\n- 自我评估 (Self - evaluation, N/A)\\n- 自我偏好 (Self - preference, N/A)\\n- 自我识别 (Self - recognition, N/A)\\n- 文本摘要 (Text Summarization, N/A)\"\n}"
}